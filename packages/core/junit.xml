<?xml version="1.0" encoding="UTF-8" ?>
<testsuites name="vitest tests" tests="15" failures="7" errors="0" time="0.050435941">
    <testsuite name="src/config/ConfigManager.integration.test.ts" timestamp="2025-10-03T01:40:58.742Z" hostname="Sapp-iMac.local" tests="15" failures="7" errors="0" skipped="0" time="0.050435941">
        <testcase classname="src/config/ConfigManager.integration.test.ts" name="ConfigManager Integration &gt; Basic functionality &gt; should initialize without errors when no config files exist" time="0.006083867">
        </testcase>
        <testcase classname="src/config/ConfigManager.integration.test.ts" name="ConfigManager Integration &gt; Basic functionality &gt; should return singleton instance" time="0.00088529">
        </testcase>
        <testcase classname="src/config/ConfigManager.integration.test.ts" name="ConfigManager Integration &gt; Basic functionality &gt; should load settings from file when exists" time="0.004262436">
        </testcase>
        <testcase classname="src/config/ConfigManager.integration.test.ts" name="ConfigManager Integration &gt; Basic functionality &gt; should handle JSON comments in settings files" time="0.002474183">
        </testcase>
        <testcase classname="src/config/ConfigManager.integration.test.ts" name="ConfigManager Integration &gt; Basic functionality &gt; should resolve environment variables in settings" time="0.002441481">
        </testcase>
        <testcase classname="src/config/ConfigManager.integration.test.ts" name="ConfigManager Integration &gt; Settings persistence &gt; should save and retrieve settings" time="0.013617342">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/config/ConfigManager.integration.test.ts:132:43
            </failure>
        </testcase>
        <testcase classname="src/config/ConfigManager.integration.test.ts" name="ConfigManager Integration &gt; Settings persistence &gt; should create directory when saving settings" time="0.002056362">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/config/ConfigManager.integration.test.ts:146:42
            </failure>
        </testcase>
        <testcase classname="src/config/ConfigManager.integration.test.ts" name="ConfigManager Integration &gt; Authentication validation &gt; should validate supported auth methods" time="0.002144196">
            <failure message="expected &apos;Invalid authentication method selecte…&apos; to be null" type="AssertionError">
AssertionError: expected &apos;Invalid authentication method selecte…&apos; to be null

- Expected: 
null

+ Received: 
&quot;Invalid authentication method selected. Please choose a supported provider.&quot;

 ❯ src/config/ConfigManager.integration.test.ts:156:28
            </failure>
        </testcase>
        <testcase classname="src/config/ConfigManager.integration.test.ts" name="ConfigManager Integration &gt; Authentication validation &gt; should validate Ollama with default URL" time="0.001601583">
            <failure message="expected &apos;Invalid authentication method selecte…&apos; to be null" type="AssertionError">
AssertionError: expected &apos;Invalid authentication method selecte…&apos; to be null

- Expected: 
null

+ Received: 
&quot;Invalid authentication method selected. Please choose a supported provider.&quot;

 ❯ src/config/ConfigManager.integration.test.ts:171:22
            </failure>
        </testcase>
        <testcase classname="src/config/ConfigManager.integration.test.ts" name="ConfigManager Integration &gt; Authentication validation &gt; should validate LM Studio with default URL" time="0.001766864">
            <failure message="expected &apos;Invalid authentication method selecte…&apos; to be null" type="AssertionError">
AssertionError: expected &apos;Invalid authentication method selecte…&apos; to be null

- Expected: 
null

+ Received: 
&quot;Invalid authentication method selected. Please choose a supported provider.&quot;

 ❯ src/config/ConfigManager.integration.test.ts:178:22
            </failure>
        </testcase>
        <testcase classname="src/config/ConfigManager.integration.test.ts" name="ConfigManager Integration &gt; Authentication validation &gt; should fail with invalid auth method" time="0.001208309">
        </testcase>
        <testcase classname="src/config/ConfigManager.integration.test.ts" name="ConfigManager Integration &gt; Error handling &gt; should throw error when accessing settings before initialization" time="0.00159345">
        </testcase>
        <testcase classname="src/config/ConfigManager.integration.test.ts" name="ConfigManager Integration &gt; Error handling &gt; should handle malformed JSON gracefully" time="0.002436294">
        </testcase>
        <testcase classname="src/config/ConfigManager.integration.test.ts" name="ConfigManager Integration &gt; Environment file loading &gt; should load .env file from workspace" time="0.002452543">
            <failure message="expected undefined to be &apos;workspace-value&apos; // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be &apos;workspace-value&apos; // Object.is equality

- Expected: 
&quot;workspace-value&quot;

+ Received: 
undefined

 ❯ src/config/ConfigManager.integration.test.ts:216:36
            </failure>
        </testcase>
        <testcase classname="src/config/ConfigManager.integration.test.ts" name="ConfigManager Integration &gt; Environment file loading &gt; should prefer qwen-specific .env files" time="0.003129328">
            <failure message="expected undefined to be &apos;qwen-value&apos; // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be &apos;qwen-value&apos; // Object.is equality

- Expected: 
&quot;qwen-value&quot;

+ Received: 
undefined

 ❯ src/config/ConfigManager.integration.test.ts:235:36
            </failure>
        </testcase>
    </testsuite>
</testsuites>
